tabela$data.penaltyMinutes <- NULL
tabela$data.shootingPctg <- NULL
tabela <- tabela[c(4,2,7,3,1,6,5)]
names(tabela)[1] <- "igralci"
names(tabela)[2] <- "odigrane.tekme"
names(tabela)[3] <- "streli"
names(tabela)[4] <- "goli"
names(tabela)[5] <- "asistence"
names(tabela)[6] <- "točke"
names(tabela)[7] <- "igralni.položaj"
tabela["procent.strela"] <- (tabela$goli / tabela$streli)*100
tabela <- tabela[!is.na(tabela$procent.strela),]
tabela <- arrange(tabela, igralci)
#naredimo novo tabelo, da vidimo povprečja podkategorij
imena <- c("odigrane.tekme", "streli", "goli", "asistence", "točke", "procent.strela")
povprecja <- matrix(data = NA, nrow=1, ncol=6, byrow = TRUE)
povprecja <- data.frame(povprecja)
names(povprecja)<- imena
povprecja$odigrane.tekme<- sum(tabela$odigrane.tekme)/853
povprecja$streli <- sum(tabela$streli)/853
povprecja$goli <- sum(tabela$goli)/853
povprecja$asistence <- sum(tabela$asistence)/853
povprecja$točke <- sum(tabela$točke)/853
povprecja$procent.strela <- sum(tabela$procent.strela)/882
?delete
?DELETE
?!
.
tabela[tabela$odigrane.tekme <= 10, ] <- NULL
tabela[tabela$odigrane.tekme <= 10, ] <- NA
tabela <- tabela[!is.na(tabela$odigrane.tekme),]
r <- GET("http://www.nhl.com/stats/rest/grouped/skaters/season/skatersummary?cayenneExp=seasonId=20142015%20and%20gameTypeId=2")
text <- content(r, "text")
data <- fromJSON(content(r, "text"))
tabela <- data.frame(data)
tabela$data.plusMinus <- NULL
tabela$data.otGoals <- NULL
tabela$data.playerFirstName <- NULL
tabela$data.playerLastName <- NULL
tabela$total <- NULL
tabela$data.faceoffWinPctg <- NULL
tabela$data.playerId <- NULL
tabela$data.playerTeamsPlayedFor <- NULL
tabela$data.seasonId <- NULL
tabela$data.timeOnIcePerGame <- NULL
tabela$data.ppGoals <- NULL
tabela$data.gameWinningGoals <- NULL
tabela$data.shPoints <- NULL
tabela$data.ppPoints <- NULL
tabela$data.shGoals <- NULL
tabela$data.shiftsPerGame <- NULL
tabela$data.penaltyMinutes <- NULL
tabela$data.shootingPctg <- NULL
tabela <- tabela[c(4,2,7,3,1,6,5)]
names(tabela)[1] <- "igralci"
names(tabela)[2] <- "odigrane.tekme"
names(tabela)[3] <- "streli"
names(tabela)[4] <- "goli"
names(tabela)[5] <- "asistence"
names(tabela)[6] <- "točke"
names(tabela)[7] <- "igralni.položaj"
tabela["procent.strela"] <- (tabela$goli / tabela$streli)*100
tabela <- tabela[!is.na(tabela$procent.strela),]
tabela[tabela$odigrane.tekme <= 15, ] <- NA
tabela <- tabela[!is.na(tabela$odigrane.tekme),]
tabela <- arrange(tabela, igralci)
#naredimo novo tabelo, da vidimo povprečja podkategorij
imena <- c("odigrane.tekme", "streli", "goli", "asistence", "točke", "procent.strela")
povprecja <- matrix(data = NA, nrow=1, ncol=6, byrow = TRUE)
povprecja <- data.frame(povprecja)
names(povprecja)<- imena
povprecja$odigrane.tekme<- sum(tabela$odigrane.tekme)/687
povprecja$streli <- sum(tabela$streli)/687
povprecja$goli <- sum(tabela$goli)/687
povprecja$asistence <- sum(tabela$asistence)/687
povprecja$točke <- sum(tabela$točke)/687
povprecja$procent.strela <- sum(tabela$procent.strela)/687
ggplot(data=tabela, aes(x=tabela$igralci, y=tabela$točke)) + geom_point()
ggplot(data=tabela, aes(x=tabela$streli, y=tabela$točke)) + geom_point()
ggplot(data=tabela, aes(x=tabela$streli, y=tabela$točke))
ggplot(data=tabela, aes(x=igralci, y=točke)) + geom_boxplot()
ggplot(data=tabela, aes(x=igralci, y=točke)) + geom_boxplot()+ geom_point()
ggplot(data=tabela, aes(x=igralci)) + geom_histogram()
geom_vline(xintercept=median(tabela$točke), col="red")
geom_vline(xintercept=median(igralci), col="red")
geom_vline(xintercept=median(tabela$igralci), col="red")
ggplot(tabela, aes(clarity, fill=cut)) + geom_bar()
source('C:/Users/Anja/Desktop/Šola/Analiza podatkov/projekt/APPR-2015-16-master/uvoz/uvoz.r', encoding = 'UTF-8')
library(dplyr)
library(ggplot2)
require(jsonlite)
require(httr)
require(zoo)
r <- GET("http://www.nhl.com/stats/rest/grouped/skaters/season/skatersummary?cayenneExp=seasonId=20142015%20and%20gameTypeId=2")
text <- content(r, "text")
data <- fromJSON(content(r, "text"))
tabela <- data.frame(data)
tabela$data.plusMinus <- NULL
tabela$data.otGoals <- NULL
tabela$data.playerFirstName <- NULL
tabela$data.playerLastName <- NULL
tabela$total <- NULL
tabela$data.faceoffWinPctg <- NULL
tabela$data.playerId <- NULL
tabela$data.playerTeamsPlayedFor <- NULL
tabela$data.seasonId <- NULL
tabela$data.timeOnIcePerGame <- NULL
tabela$data.ppGoals <- NULL
tabela$data.gameWinningGoals <- NULL
tabela$data.shPoints <- NULL
tabela$data.shGoals <- NULL
tabela$data.ppPoints <- NULL
tabela$data.shiftsPerGame <- NULL
tabela$data.penaltyMinutes <- NULL
tabela$data.shootingPctg <- NULL
tabela <- tabela[c(4,2,7,3,1,6,5)]
names(tabela)[1] <- "igralci"
names(tabela)[2] <- "odigrane.tekme"
names(tabela)[3] <- "streli"
names(tabela)[4] <- "goli"
names(tabela)[5] <- "asistence"
names(tabela)[6] <- "točke"
names(tabela)[7] <- "igralni.položaj"
tabela["procent.strela"] <- (tabela$goli / tabela$streli)*100
tabela <- tabela[!is.na(tabela$procent.strela),]
tabela[tabela$odigrane.tekme <= 15, ] <- NA
tabela <- tabela[!is.na(tabela$odigrane.tekme),]
tabela <- arrange(tabela, igralci)
#naredimo novo tabelo, da vidimo povprečja podkategorij
imena <- c("odigrane.tekme", "streli", "goli", "asistence", "točke", "procent.strela")
povprecja <- matrix(data = NA, nrow=1, ncol=6, byrow = TRUE)
povprecja <- data.frame(povprecja)
names(povprecja)<- imena
povprecja$odigrane.tekme<- sum(tabela$odigrane.tekme)/687
povprecja$streli <- sum(tabela$streli)/687
povprecja$goli <- sum(tabela$goli)/687
povprecja$asistence <- sum(tabela$asistence)/687
povprecja$točke <- sum(tabela$točke)/687
povprecja$procent.strela <- sum(tabela$procent.strela)/687
#grafi
ggplot(tabela, aes(clarity, fill=cut)) + geom_bar()
ggplot(tabela, aes(igralci, fill=cut)) + geom_bar()
ggplot(data=tabela, aes(x=igralci, y=točke)) + geom_hitogram(bindwith=5)
ggplot(data=tabela, aes(x=igralci, y=točke)) + geom_histogram(bindwith=5)
ggplot(data=tabela, aes(x=tabela$igralci, y=tabela$točke)) + geom_histogram(bindwith=5)
?geom_bar
ggplot(tabela, aes(igralci, fill=točke)) + geom_bar()
geom_point( aes(shape=igralni.položaj ) )
geom_point( aes(shape=igralni.položaj ) )
ggplot(tabela, aes(igralci, točke) ) +geom_point( aes(shape=igralni.položaj ) )
save.image("C:/Users/Anja/Desktop/Šola/NHL.RData")
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
install.packages("plotly")
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
ggplot(tabela, aes(igralci, točke) ) +geom_point( aes(shape=igralni.položaj ) )
source('C:/Users/Anja/Desktop/Šola/Analiza podatkov/projekt/APPR-2015-16-master/uvoz/uvoz.r', encoding = 'UTF-8')
g
ggplot(tabela, aes(odigrane.tekme, točke) ) +geom_point( aes(shape=igralni.položaj ) )
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
d <- tabela[sample(nrow(igralci), 687), ]
plot_ly(d, x = igralci, y = točke, text = paste("igralni.položaj: ", igralni.položaj),
mode = "markers", color = točke, size = igralci)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = igralci, y = točke, text = paste("igralni.položaj: ", igralni.položaj),
mode = "markers", color = točke, size = igralci)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = igralci, y = točke, text = paste("igralni.položaj: ", igralni.položaj),
mode = "markers", color = točke, size = točke)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralni.položaj: ", igralni.položaj),
mode = "markers", color = točke, size = točke)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size = točke)
source('C:/Users/Anja/Desktop/Šola/Analiza podatkov/projekt/APPR-2015-16-master/uvoz/uvoz.r', encoding = 'UTF-8')
source('C:/Users/Anja/Desktop/Šola/Analiza podatkov/projekt/APPR-2015-16-master/uvoz/uvoz.r', encoding = 'UTF-8')
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, točke)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, točke)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, )
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=igralni.poožaj)
d
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=igralni.položaj)
set.seed(100)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
d <- tabela[sample(nrow(tabela), 687), ]
graf(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
?plot_ly
d <- tabela[sample(nrow(tabela), 687), ]
plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
graf1 <-add_trace(graf, y = povprečja$točka, name = "loess")
graf1 <-add_trace(graf1, y = povprečja$točka, name = "loess")
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
graf1 <-add_trace(graf1, y = povprečja$točka, name = "loess")
graf1 <-add_trace(graf1, y = povprečja$točke, name = "loess")
?add_theme
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
source('C:/Users/Anja/Desktop/Šola/Analiza podatkov/projekt/APPR-2015-16-master/uvoz/uvoz.r', encoding = 'UTF-8')
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
library(dplyr)
library(plotly)
library(ggplot2)
require(jsonlite)
require(httr)
require(zoo)
r <- GET("http://www.nhl.com/stats/rest/grouped/skaters/season/skatersummary?cayenneExp=seasonId=20142015%20and%20gameTypeId=2")
text <- content(r, "text")
data <- fromJSON(content(r, "text"))
tabela <- data.frame(data)
tabela$data.plusMinus <- NULL
tabela$data.otGoals <- NULL
tabela$data.playerFirstName <- NULL
tabela$data.playerLastName <- NULL
tabela$total <- NULL
tabela$data.faceoffWinPctg <- NULL
tabela$data.playerId <- NULL
tabela$data.playerTeamsPlayedFor <- NULL
tabela$data.seasonId <- NULL
tabela$data.timeOnIcePerGame <- NULL
tabela$data.ppGoals <- NULL
tabela$data.shPoints <- NULL
tabela$data.gameWinningGoals <- NULL
tabela$data.shGoals <- NULL
tabela$data.shiftsPerGame <- NULL
tabela$data.ppPoints <- NULL
tabela$data.penaltyMinutes <- NULL
tabela <- tabela[c(4,2,7,3,1,6,5)]
tabela$data.shootingPctg <- NULL
names(tabela)[1] <- "igralci"
names(tabela)[2] <- "odigrane.tekme"
names(tabela)[3] <- "streli"
names(tabela)[4] <- "goli"
names(tabela)[5] <- "asistence"
names(tabela)[6] <- "točke"
names(tabela)[7] <- "igralni.položaj"
tabela["procent.strela"] <- (tabela$goli / tabela$streli)*100
tabela <- tabela[!is.na(tabela$procent.strela),]
tabela[tabela$odigrane.tekme <= 15, ] <- NA
tabela <- arrange(tabela, igralci)
tabela <- tabela[!is.na(tabela$odigrane.tekme),]
#naredimo novo tabelo, da vidimo povprečja podkategorij
imena <- c("odigrane.tekme", "streli", "goli", "asistence", "točke", "procent.strela")
povprecja <- matrix(data = NA, nrow=1, ncol=6, byrow = TRUE)
povprecja <- data.frame(povprecja)
names(povprecja)<- imena
povprecja$odigrane.tekme<- sum(tabela$odigrane.tekme)/687
povprecja$streli <- sum(tabela$streli)/687
povprecja$goli <- sum(tabela$goli)/687
povprecja$asistence <- sum(tabela$asistence)/687
povprecja$točke <- sum(tabela$točke)/687
povprecja$procent.strela <- sum(tabela$procent.strela)/687
#grafi
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
library(dplyr)
library(plotly)
library(ggplot2)
require(jsonlite)
require(httr)
require(zoo)
r <- GET("http://www.nhl.com/stats/rest/grouped/skaters/season/skatersummary?cayenneExp=seasonId=20142015%20and%20gameTypeId=2")
text <- content(r, "text")
data <- fromJSON(content(r, "text"))
tabela <- data.frame(data)
tabela$data.plusMinus <- NULL
tabela$data.otGoals <- NULL
tabela$data.playerFirstName <- NULL
tabela$data.playerLastName <- NULL
tabela$total <- NULL
tabela$data.faceoffWinPctg <- NULL
tabela$data.playerId <- NULL
tabela$data.playerTeamsPlayedFor <- NULL
tabela$data.seasonId <- NULL
tabela$data.timeOnIcePerGame <- NULL
tabela$data.ppGoals <- NULL
tabela$data.gameWinningGoals <- NULL
tabela$data.shPoints <- NULL
tabela$data.shGoals <- NULL
tabela$data.ppPoints <- NULL
tabela$data.shiftsPerGame <- NULL
tabela$data.penaltyMinutes <- NULL
tabela$data.shootingPctg <- NULL
tabela <- tabela[c(4,2,7,3,1,6,5)]
names(tabela)[1] <- "igralci"
names(tabela)[2] <- "odigrane.tekme"
names(tabela)[3] <- "streli"
names(tabela)[4] <- "goli"
names(tabela)[5] <- "asistence"
names(tabela)[6] <- "točke"
names(tabela)[7] <- "igralni.položaj"
tabela["procent.strela"] <- (tabela$goli / tabela$streli)*100
tabela <- tabela[!is.na(tabela$procent.strela),]
tabela[tabela$odigrane.tekme <= 15, ] <- NA
tabela <- tabela[!is.na(tabela$odigrane.tekme),]
tabela <- arrange(tabela, igralci)
#naredimo novo tabelo, da vidimo povprečja podkategorij
imena <- c("odigrane.tekme", "streli", "goli", "asistence", "točke", "procent.strela")
povprecja <- matrix(data = NA, nrow=1, ncol=6, byrow = TRUE)
povprecja <- data.frame(povprecja)
names(povprecja)<- imena
povprecja$odigrane.tekme<- sum(tabela$odigrane.tekme)/687
povprecja$streli <- sum(tabela$streli)/687
povprecja$goli <- sum(tabela$goli)/687
povprecja$asistence <- sum(tabela$asistence)/687
povprecja$točke <- sum(tabela$točke)/687
povprecja$procent.strela <- sum(tabela$procent.strela)/687
#grafi
d <- tabela[sample(nrow(tabela), 687), ]
graf1 <- plot_ly(d, x = odigrane.tekme, y = točke, text = paste("igralci: ", igralci),
mode = "markers", color = točke, size=točke)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
shinyServer(function(input, output) {
# Expression that generates a histogram. The expression is
# wrapped in a call to renderPlot to indicate that:
#
#  1) It is "reactive" and therefore should be automatically
#     re-executed when inputs change
#  2) Its output type is a plot
output$distPlot <- renderPlot({
x    <- faithful[, 2]  # Old Faithful Geyser data
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
})
shinyServer()
# GRAF - čas v odvisnosti od števila točk
library(ggplot2)
library(plotly)
install.packages("plotly")
setwd("C:/Users/Anja/Desktop/Šola/Praktikum/minimum-spanning-tree/rezultati")
# GRAF - čas v odvisnosti od števila točk
l
# GRAF - čas v odvisnosti od števila točk
l
library(plotly)
cas <- read.table("cas.txt")
stevilo_tock <- c(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 50, 60, 70, 100, 150, 200, 250)
tabela <- data.frame(t(setNames(cas, stevilo_tock)))
colnames(tabela) <- c("casi")
plot.new()
ggplot(tabela) + geom_line(data = tabela, aes(x = stevilo_tock, y = tabela$casi), col = "Violet") +
geom_point(data = tabela, aes(x = stevilo_tock, y = tabela$casi), col = "Blue") +
xlab("Stevilo tock") + ylab("Cas")
require(dplyr)
require(ggplot2)
setwd("C:/Users/Anja/Desktop/Šola/Praktikum/minimum-spanning-tree/rezultati")
tocke <- read.table("vsota_glede_st_tock.txt")
tocke <- as.data.frame(t(tocke))
colnames(tocke) <- c("krog", "kvadrat", "pravokotnik", "elipsa", "trikotnik")
tocke["st_tock"] <- c(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 50)
#graf
plot.new()
ggplot(data=tocke) + geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$krog), colour="darkorchid")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$krog), colour="darkorchid", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$kvadrat), colour="deeppink")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$kvadrat), colour="deeppink", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$pravokotnik), colour="goldenrod1")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$pravokotnik), colour="goldenrod1", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$elipsa), colour="darkcyan")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$elipsa), colour="darkcyan", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$trikotnik), colour="darkolivegreen3")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$trikotnik), colour="darkolivegreen3", size=1.5) +
labs(x="Stevilo tock", y="Vsota")
legend("topright", legend = c("krog", "kvadrat", "pravokotnik", "elipsa", "trikotnik"), col = c("darkorchid", "deeppink", "goldenrod1", "darkcyan", "darkolivegreen3"), lty=c(1, 1, 1, 1, 1))
#graf za vsote kvadratov cen likov (brez pravokotnika) odvisnih od polmerov
polmeri <- read.table("vsota_glede_polmer.txt")
polmeri <- as.data.frame(t(polmeri))
colnames(polmeri) <- c("krog", "kvadrat", "pravokotnik", "elipsa",  "trikotnik")
polmeri["polmer"] <- c(1, 1.5, 2, 5, 10)
#graf
plot.new()
ggplot(data=polmeri) + geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid", size=0.5) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink", size=0.5) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1", size=0.5) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan", size=0.5) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3", size=0.5)+
labs(x="Polmer", y="Vsota")
legend("topleft", legend = c("krog", "kvadrat", "pravokotnik", "elipsa", "trikotnik"), col = c("darkorchid", "deeppink", "darkcyan", "darkolivegreen3"), lty=c(1, 1, 1, 1))
plot.new()
ggplot(data=polmeri) + geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3", size=1)+
labs(x="Polmer", y="Vsota")
legend("topleft", legend = c("krog", "kvadrat", "pravokotnik", "elipsa", "trikotnik"), col = c("darkorchid", "deeppink", "darkcyan", "darkolivegreen3"), lty=c(1, 1, 1, 1))
setwd("C:/Users/Anja/Desktop/Šola/Praktikum/minimum-spanning-tree/rezultati")
require(dplyr)
require(ggplot2)
#graf za vsote kvadratov cen likov odvisnih od stevila tock
tocke <- read.table("vsota_glede_st_tock.txt")
tocke <- as.data.frame(t(tocke))
colnames(tocke) <- c("krog", "kvadrat", "pravokotnik", "elipsa", "trikotnik")
tocke["st_tock"] <- c(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 30, 50)
#graf
plot.new()
ggplot(data=tocke) + geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$krog), colour="darkorchid")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$krog), colour="darkorchid", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$kvadrat), colour="deeppink")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$kvadrat), colour="deeppink", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$pravokotnik), colour="goldenrod1")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$pravokotnik), colour="goldenrod1", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$elipsa), colour="darkcyan")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$elipsa), colour="darkcyan", size=1.5) +
geom_point(data=tocke, aes(x=tocke$st_tock, y=tocke$trikotnik), colour="darkolivegreen3")+
geom_line(data=tocke, aes(x=tocke$st_tock, y=tocke$trikotnik), colour="darkolivegreen3", size=1.5) +
labs(x="Stevilo tock", y="Vsota")
legend("topright", legend = c("krog", "kvadrat", "pravokotnik", "elipsa", "trikotnik"), col = c("darkorchid", "deeppink", "goldenrod1", "darkcyan", "darkolivegreen3"), lty=c(1, 1, 1, 1, 1))
#graf za vsote kvadratov cen likov (brez pravokotnika) odvisnih od polmerov
polmeri <- read.table("vsota_glede_polmer.txt")
polmeri <- as.data.frame(t(polmeri))
colnames(polmeri) <- c("krog", "kvadrat", "pravokotnik", "elipsa",  "trikotnik")
polmeri["polmer"] <- c(1, 1.5, 2, 5, 10)
#graf
plot.new()
ggplot(data=polmeri) + geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3", size=1)+
labs(x="Polmer", y="Vsota")
legend("topleft", legend = c("krog", "kvadrat", "pravokotnik", "elipsa", "trikotnik"), col = c("darkorchid", "deeppink", "darkcyan", "darkolivegreen3"), lty=c(1, 1, 1, 1))
plot.new()
ggplot(data=polmeri) + geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1", size=1) +
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan")+
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3", size=1)+
labs(x="Polmer", y="Vsota")
legend("topleft", legend = c("krog", "kvadrat", "elipsa", "trikotnik"), col = c("darkorchid", "deeppink", "darkcyan", "darkolivegreen3"), lty=c(1, 1, 1, 1))
plot.new()
ggplot(data=polmeri) + geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$krog), colour="darkorchid", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$kvadrat), colour="deeppink", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$pravokotnik), colour="goldenrod1", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$elipsa), colour="darkcyan", size=1) +
geom_point(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3")+
geom_line(data=polmeri, aes(x=polmeri$polmer, y=polmeri$trikotnik), colour="darkolivegreen3", size=1)+
labs(x="Polmer", y="Vsota")
legend("topleft", legend = c("krog", "kvadrat","pravokotnik", "elipsa", "trikotnik"), col = c("darkorchid", "deeppink", "goldenrod1", "darkcyan", "darkolivegreen3"), lty=c(1, 1, 1, 1, 1))
